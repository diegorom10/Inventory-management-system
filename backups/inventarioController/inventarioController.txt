<?php

namespace App\Http\Controllers;

use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Illuminate\Foundation\Bus\DispatchesJobs;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Routing\Controller as BaseController;
use Illuminate\Support\Facades\DB; //agregada
use Illuminate\Http\Request; //agregado
use DataTables;

class InventarioController extends Controller{
    public function index(Request $request){


        if($request->ajax()){
            /**SELECT inventarioutl.id, catalogo.descripcion, inventarioutl.qtyo AS 'Cantidad original', inventarioutl.qtyf AS 'Cantidad fisica', inventarioutl.qtyc AS 'Cantidad comprometida' 
             * FROM inventarioutl INNER JOIN catalogo ON inventarioutl.herramienta = catalogo.id;  */

            $query = 'SELECT inventarioutl.id, catalogo.codigo, catalogo.numserie, catalogo.descripcion, inventarioutl.qtyo, inventarioutl.qtyf, inventarioutl.qtyc'
                . ' FROM inventarioutl' 
                . ' INNER JOIN catalogo'
                . ' ON inventarioutl.herramienta = catalogo.id';

            $inventarios = DB::select($query);

            //datatable no carga al enviar codigo y numserie juntos, solucion -> enviar un arreglo propio
            $data = array();
            foreach($inventarios as $inventario){
                $codigo = '';
                if($inventario->numserie == null){
                   $codigo = $inventario->codigo;
                }else{
                    $codigo = $inventario->numserie;
                }

                if(!empty($codigo)){
                    $data[] = array(
                        'codigo' => $codigo,
                        'descripcion' => $inventario->descripcion,
                        'Cantidad original' => $inventario->qtyo,
                        'Cantidad fisica' => $inventario->qtyf,
                        'Cantidad comprometida' => $inventario->qtyc
                    );
                }else{
                    return "Hubo un problema al obtener el codigo o el numero de serie";
                }
               
            }

            return DataTables::of($data)
                ->make(true);
        }

        return view('inventario.index');

    }
    

    public function fetchTools(){
        $query = 'SELECT catalogo.id, catalogo.descripcion, catalogo.codigo, catalogo.numserie, inventarioutl.qtyf FROM catalogo '  
            . 'INNER JOIN inventarioutl ON catalogo.id = inventarioutl.herramienta';
        
        $result = DB::select($query);

        if(!$result){
            die('Hubo un error '. mysqli_error($connect));
        }

        $json = array();

        if(count($result) > 0){
            foreach($result as $row){
                $json[] = array(
                    'id' => $row->id,
                    'descripcion' => $row->descripcion,
                    'codigo' => $row->codigo,
                    'numserie' => $row->numserie,
                    'qtyf' => $row->qtyf
                );    
            }
            $jsonstring =  json_encode($json);

            return $jsonstring;
        }else{
            die("No existen herramientas");
        } 

    }

    public function getTool($codigo){
        $codigo_serie = $codigo;
        $query = 'SELECT catalogo.id, catalogo.descripcion, inventarioutl.qtyf FROM catalogo ' 
            . 'INNER JOIN inventarioutl ON catalogo.id = inventarioutl.herramienta '
            . 'WHERE catalogo.numserie = "'.$codigo_serie.'" OR catalogo.codigo = "' . $codigo_serie . '"';
    
        // $resultado = mysqli_query($connect, $query);
        $resultado = DB::select($query);
    
        if(count($resultado) == 0){
            die('No se pudo obtener esa herramienta');
        }
    
        $json = array();
        
        foreach($resultado as $row){
            $json[] = array(
                'id' => $row->id,
                'descripcion' => $row->descripcion,
                'qtyf' => $row->qtyf
            );    
        }
    
        $jsonstring =  json_encode($json[0]);
        return $jsonstring;
    }


    public function hacerPrestamo(Request $request){
         $herramientas = $request->selected_list;
         $comentario = $request->comentario == "" ? 'Prestamo de material comun' : $request->comentario;

        //crear movimiento en kardex y obtener su id
         $id_mov = DB::table('kardex')->insertGetId(
            array(
                'movimiento' => 1,
                'descripcion' => $comentario,
            )
        );
    
        if(empty($id_mov)) abort(500);
        
        //actualizar cantidades en inventario
         foreach($herramientas as $herramienta){
            $id_kardexD = '';
            $codigo = $herramienta['codigo'];
            $query = 'SELECT id FROM catalogo WHERE numserie = '. $codigo .' OR codigo = '. $codigo;
            $result = DB::select($query);


             if(count($result) > 0){
                $id = $result[0]->id;
                $query = 'UPDATE inventarioutl SET qtyc = (qtyc + ' . $herramienta['cantidad'] . '), qtyf = (qtyo - qtyc) WHERE herramienta = '. $id;
                DB::select($query);
             }else{
                DB::table('kardex')
                ->where('id',$id_mov)
                ->delete();
                abort(500);
             }

             $id_kardex = DB::table('kardex_detalle')->insertGetId(
                    array(
                        'id_kardex' => $id_mov,
                        'id_herramienta' => $id,
                        'qty' => $herramienta['cantidad']
                    )
                );

            if(empty($id_kardex)) return "Fallo al agregar detalle de alguna herramienta";

         }
         
       return "Datos insertados satisfactoriamente";
    }


    public function getTicket(Request $request){
        // if(isset($id_ticket) && $id_ticket != null){
        //     $query = 'SELECT detalle_peticion.herramienta, catalogo.codigo, catalogo.numserie, catalogo.descripcion, detalle_peticion.qty_peticion'
        //     . ' FROM detalle_peticion'
        //     . ' INNER JOIN catalogo ON detalle_peticion.herramienta = catalogo.id' 
        //     . ' WHERE detalle_peticion.peticion_id = ' . $id_ticket; 
        //     $herramientas_ticket = DB::select($query);
        // }
        $herramienta_ticket = array();

        $herramienta_ticket[] = array(
          'codigo'=>5067,
          'descripcion'=> 'martillo',
          'herramienta'=> 1,
          'numserie'=> null,
          'qty_peticion'=>1
        );

        $herramienta_ticket[] = array(
            'codigo'=>345,
            'descripcion'=> 'Lijas',
            'herramienta'=> 4349,
            'numserie'=> null,
            'qty_peticion'=>1 
        );


        return $herramienta_ticket;
            
    }


    public function indexTicket(Request $request){

        return view('tickets.ticketView');

    }

}